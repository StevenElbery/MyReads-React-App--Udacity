{"ast":null,"code":"import _classCallCheck from \"/Users/stevenelbery/Desktop/Udacity/React/Projects/MyReads/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/stevenelbery/Desktop/Udacity/React/Projects/MyReads/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/stevenelbery/Desktop/Udacity/React/Projects/MyReads/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/stevenelbery/Desktop/Udacity/React/Projects/MyReads/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/stevenelbery/Desktop/Udacity/React/Projects/MyReads/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/stevenelbery/Desktop/Udacity/React/Projects/MyReads/src/components/Search.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as BooksAPI from '../BooksAPI';\nimport Book from './Book';\n\nvar Search = /*#__PURE__*/function (_Component) {\n  _inherits(Search, _Component);\n\n  function Search() {\n    var _this;\n\n    _classCallCheck(this, Search);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Search).call(this));\n\n    _this.updateQuery = function (query) {\n      var libraryBooks = _this.props.libraryBooks;\n\n      _this.setState({\n        query: query\n      });\n\n      var filteredQuery = query.trim();\n\n      if (filteredQuery === '') {\n        return;\n      }\n\n      BooksAPI.search(filteredQuery, 10).then(function (response) {\n        if (response && response.length) {\n          var books = response.map(function (book) {\n            var libBook = libraryBooks.find(function (libBook) {\n              return libBook.id === book.id;\n            });\n            var shelf = libBook ? libBook.shelf : 'none';\n            return {\n              id: book.id,\n              shelf: shelf,\n              authors: book.authors,\n              title: book.title,\n              imageLinks: {\n                thumbnail: book.imageLinks.thumbnail\n              }\n            };\n          });\n\n          _this.setState({\n            books: books\n          });\n        }\n      });\n    };\n\n    _this.state = {\n      query: '',\n      books: []\n    };\n    return _this;\n  }\n  /**\n   * Revise the query to request api and search api with current query to update the state of the view\n   * @param {string} query string is used to request from the API\n   */\n\n\n  _createClass(Search, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var books = this.state.books;\n      var updateBookShelf = this.props.updateBookShelf;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"search-library\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"search-library-bar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        to: \"/\",\n        className: \"exit-search\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }\n      }, \"Close\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"search-library-input-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Search library by title, author, or category\",\n        onChange: function onChange(event) {\n          return _this2.updateQuery(event.target.value);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"search-library-results\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"ol\", {\n        className: \"library-grid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }\n      }, books.map(function (book) {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: book.id,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Book, {\n          id: book.id,\n          shelf: book.shelf,\n          authors: book.authors,\n          title: book.title,\n          imageLinks: book.imageLinks,\n          updateBookShelf: updateBookShelf,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 33\n          }\n        }));\n      }))));\n    }\n  }]);\n\n  return Search;\n}(Component);\n\nexport default Search;","map":{"version":3,"sources":["/Users/stevenelbery/Desktop/Udacity/React/Projects/MyReads/src/components/Search.js"],"names":["React","Component","Link","BooksAPI","Book","Search","updateQuery","query","libraryBooks","props","setState","filteredQuery","trim","search","then","response","length","books","map","book","libBook","find","id","shelf","authors","title","imageLinks","thumbnail","state","updateBookShelf","event","target","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,KAAKC,QAAZ,MAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;;IAEMC,M;;;AAEF,oBAAe;AAAA;;AAAA;;AACX;;AADW,UAafC,WAbe,GAaD,UAACC,KAAD,EAAW;AAAA,UACbC,YADa,GACI,MAAKC,KADT,CACbD,YADa;;AAGrB,YAAKE,QAAL,CAAc;AAAEH,QAAAA,KAAK,EAAEA;AAAT,OAAd;;AACA,UAAMI,aAAa,GAAGJ,KAAK,CAACK,IAAN,EAAtB;;AACA,UAAID,aAAa,KAAK,EAAtB,EAA0B;AACtB;AACH;;AACDR,MAAAA,QAAQ,CAACU,MAAT,CAAgBF,aAAhB,EAA+B,EAA/B,EAAmCG,IAAnC,CAAwC,UAACC,QAAD,EAAc;AAClD,YAAIA,QAAQ,IAAIA,QAAQ,CAACC,MAAzB,EAAiC;AAC7B,cAAMC,KAAK,GAAGF,QAAQ,CAACG,GAAT,CAAa,UAACC,IAAD,EAAU;AACjC,gBAAMC,OAAO,GAAGZ,YAAY,CAACa,IAAb,CAAkB,UAACD,OAAD;AAAA,qBAAaA,OAAO,CAACE,EAAR,KAAeH,IAAI,CAACG,EAAjC;AAAA,aAAlB,CAAhB;AACA,gBAAMC,KAAK,GAAGH,OAAO,GAAGA,OAAO,CAACG,KAAX,GAAmB,MAAxC;AAEA,mBAAO;AACHD,cAAAA,EAAE,EAAEH,IAAI,CAACG,EADN;AAEHC,cAAAA,KAAK,EAAEA,KAFJ;AAGHC,cAAAA,OAAO,EAAEL,IAAI,CAACK,OAHX;AAIHC,cAAAA,KAAK,EAAEN,IAAI,CAACM,KAJT;AAKHC,cAAAA,UAAU,EAAE;AACRC,gBAAAA,SAAS,EAAER,IAAI,CAACO,UAAL,CAAgBC;AADnB;AALT,aAAP;AASH,WAba,CAAd;;AAcA,gBAAKjB,QAAL,CAAc;AAAEO,YAAAA,KAAK,EAALA;AAAF,WAAd;AACH;AACJ,OAlBD;AAmBH,KAxCc;;AAEX,UAAKW,KAAL,GAAa;AACTrB,MAAAA,KAAK,EAAE,EADE;AAETU,MAAAA,KAAK,EAAE;AAFE,KAAb;AAFW;AAMd;AAGD;;;;;;;;6BAkCU;AAAA;;AAAA,UACEA,KADF,GACY,KAAKW,KADjB,CACEX,KADF;AAAA,UAEEY,eAFF,GAEsB,KAAKpB,KAF3B,CAEEoB,eAFF;AAIN,0BACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,IAAD;AACE,QAAA,EAAE,EAAC,GADL;AAEE,QAAA,SAAS,EAAC,aAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAOE;AAAK,QAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,WAAW,EAAC,8CAFhB;AAGI,QAAA,QAAQ,EAAG,kBAACC,KAAD;AAAA,iBAAW,MAAI,CAACxB,WAAL,CAAiBwB,KAAK,CAACC,MAAN,CAAaC,KAA9B,CAAX;AAAA,SAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAPF,CADA,eAgBA;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEUf,KAAK,CAACC,GAAN,CAAU,UAACC,IAAD;AAAA,4BACN;AAAI,UAAA,GAAG,EAAGA,IAAI,CAACG,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,IAAD;AACI,UAAA,EAAE,EAAGH,IAAI,CAACG,EADd;AAEI,UAAA,KAAK,EAAGH,IAAI,CAACI,KAFjB;AAGI,UAAA,OAAO,EAAGJ,IAAI,CAACK,OAHnB;AAII,UAAA,KAAK,EAAGL,IAAI,CAACM,KAJjB;AAKI,UAAA,UAAU,EAAGN,IAAI,CAACO,UALtB;AAMI,UAAA,eAAe,EAAGG,eANtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADM;AAAA,OAAV,CAFV,CADF,CAhBA,CADJ;AAqCH;;;;EAtFgB5B,S;;AAyFrB,eAAeI,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport * as BooksAPI from '../BooksAPI';\nimport Book from './Book';\n\nclass Search extends Component {\n\n    constructor () {\n        super();\n        this.state = {\n            query: '',\n            books: []\n        };\n    }\n\n\n    /**\n     * Revise the query to request api and search api with current query to update the state of the view\n     * @param {string} query string is used to request from the API\n     */\n    updateQuery = (query) => {\n        const { libraryBooks } = this.props;\n\n        this.setState({ query: query });\n        const filteredQuery = query.trim();\n        if (filteredQuery === '') {\n            return;\n        }\n        BooksAPI.search(filteredQuery, 10).then((response) => {\n            if (response && response.length) {\n                const books = response.map((book) => {\n                    const libBook = libraryBooks.find((libBook) => libBook.id === book.id);\n                    const shelf = libBook ? libBook.shelf : 'none';\n\n                    return {\n                        id: book.id,\n                        shelf: shelf,\n                        authors: book.authors,\n                        title: book.title,\n                        imageLinks: {\n                            thumbnail: book.imageLinks.thumbnail\n                        }\n                    };\n                });\n                this.setState({ books });\n            }\n        });\n    };\n\n\n    render () {\n        const { books } = this.state;\n        const { updateBookShelf } = this.props;\n\n        return(\n            <div className=\"search-library\">\n            <div className=\"search-library-bar\">\n              <Link\n                to=\"/\"\n                className=\"exit-search\"\n              >\n              Close\n              </Link>\n              <div className=\"search-library-input-wrapper\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Search library by title, author, or category\"\n                    onChange={ (event) => this.updateQuery(event.target.value) }\n                />\n              </div>\n            </div>\n            <div className=\"search-library-results\">\n              <ol className=\"library-grid\">\n                    {\n                        books.map((book) => (\n                            <li key={ book.id }>\n                                <Book\n                                    id={ book.id }\n                                    shelf={ book.shelf }\n                                    authors={ book.authors }\n                                    title={ book.title }\n                                    imageLinks={ book.imageLinks }\n                                    updateBookShelf={ updateBookShelf }\n                                />\n                            </li>\n                        ))\n                    }\n              </ol>\n            </div>\n          </div>\n        );\n    }\n}\n\nexport default Search;"]},"metadata":{},"sourceType":"module"}